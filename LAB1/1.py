"""
Это решение вычисляет сумму первых N членов числового ряда S = 2/3 + 1 + 6/5 + ... + (2*i)/(i+2) + ...
"""

def calculate_series_sum(n: int) -> float:
    """
    Вычисляет сумму первых N членов заданного числового ряда.

    Аргументы:
        n (int): Количество членов для суммирования. Согласно условию, 1 <= n <= 100.

    Возвращает:
        float: Рассчитанная сумма в виде вещественного числа.
    """
    # Проверка на соответствие ограничениям, указанным в задаче.
    if not 1 <= n <= 100:
        raise ValueError("Количество членов N должно быть в диапазоне от 1 до 100.")

    # Используем генераторное выражение внутри функции sum() для краткого и эффективного
    # вычисления суммы. Итерация от 1 до n включительно.
    return sum((2 * i) / (i + 2) for i in range(1, n + 1))


def main() -> None:
    """
    Основная функция программы: считывает входные данные, вызывает функцию вычисления
    и выводит результат, отформатированный до трех знаков после запятой.
    """
    try:
        # Считываем единственное целое число N из ввода.
        num_terms = int(input())

        # Вычисляем сумму.
        total_sum = calculate_series_sum(num_terms)

        # Выводим результат с точностью до 0.001, как требуется в задаче.
        print(f"{total_sum:.3f}")

    except (ValueError, EOFError):
        # Обработка некорректного ввода (хотя по условию задачи он всегда корректен).
        print("Ошибка: Введите одно целое положительное число от 1 до 100.")


if __name__ == "__main__":
    main()