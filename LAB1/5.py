"""
Это решение вычисляет, за сколько дней студент Андрей прочитает книгу,
учитывая, что его скорость чтения и время, затрачиваемое на чтение,
увеличиваются каждый день по определенным правилам.
"""

from typing import NoReturn


def calculate_reading_days(initial_speed: int, total_pages: int) -> int:
    """
    Моделирует процесс чтения день за днем до полного прочтения книги.

    Логика прогрессии:
    - В день `d` Андрей читает `d` часов.
    - Его скорость чтения в этот день составляет `initial_speed + (d - 1) * 2` страниц в час.
    - Соответственно, за день `d` он прочитывает: `d * (initial_speed + (d - 1) * 2)` страниц.

    Функция суммирует прочитанные страницы, пока их общее количество не достигнет
    или не превысит общее количество страниц в книге.

    Аргументы:
        initial_speed (int): Количество страниц, которые Андрей читает за час в первый день (X).
        total_pages (int): Общее количество страниц в книге (Y).

    Возвращает:
        int: Общее количество дней, необходимое для прочтения книги.
    """
    # Если в книге нет страниц, на это не потребуется времени.
    if total_pages <= 0:
        return 0

    cumulative_pages_read = 0
    days_counter = 0

    # Продолжаем симуляцию, пока общее количество прочитанных страниц
    # не станет больше или равно количеству страниц в книге.
    while cumulative_pages_read < total_pages:
        days_counter += 1

        # Рассчитываем количество страниц, прочитанных за текущий день.
        hours_read_today = days_counter
        current_reading_speed = initial_speed + (days_counter - 1) * 2
        pages_read_today = current_reading_speed * hours_read_today

        # Добавляем их к общему счету.
        cumulative_pages_read += pages_read_today

    return days_counter


def main() -> NoReturn:
    """
    Основная функция: считывает входные данные, вызывает решатель и выводит результат.
    """
    try:
        # Считываем входные данные: X и Y.
        x_initial_speed = int(input())
        y_total_pages = int(input())

        # Вычисляем результат с помощью основной логической функции.
        result_days = calculate_reading_days(x_initial_speed, y_total_pages)

        # Выводим ответ.
        print(result_days)

    except (ValueError, EOFError):
        # Обработка некорректного или отсутствующего ввода.
        # В условиях соревнований обычно не требуется, но является хорошей практикой.
        print("Ошибка: Введите два целых положительных числа.")


if __name__ == "__main__":
    main()